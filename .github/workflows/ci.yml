name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install API dependencies
      run: |
        cd apps/api
        npm ci
    
    - name: Install Web dependencies
      run: |
        cd apps/web
        npm ci
    
    - name: Install Mobile dependencies
      run: |
        cd apps/mobile
        npm ci
    
    - name: Run API tests
      run: |
        cd apps/api
        npm run test
    
    - name: Run Web tests
      run: |
        cd apps/web
        npm run test
    
    - name: Lint code
      run: |
        cd apps/api && npm run lint
        cd ../web && npm run lint
    
    - name: Type check
      run: |
        cd apps/api && npm run type-check
        cd ../web && npm run type-check

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security audit
      run: |
        npm audit --audit-level high
        cd apps/api && npm audit --audit-level high
        cd ../web && npm audit --audit-level high
        cd ../mobile && npm audit --audit-level high

  deploy-staging:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to staging
      run: echo "Deploy to staging environment"
      # Add actual deployment steps here

  deploy-production:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: echo "Deploy to production environment"
      # Add actual deployment steps here
    
    - name: Notify deployment
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      if: always() 